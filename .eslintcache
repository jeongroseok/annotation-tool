[{"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\index.tsx":"1","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\reportWebVitals.ts":"2","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\states.ts":"3","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\firebase.ts":"4","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\index.ts":"5","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotation.ts":"6","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useLoadingValue.ts":"7","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\index.ts":"8","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useElementSize.ts":"9","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotationTypes.ts":"10","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\Test.tsx":"11","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetDetail.ts":"12","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItemTypes.ts":"13","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItem.ts":"14"},{"size":713,"mtime":1608584238402,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":499,"mtime":1608508913386,"results":"18","hashOfConfig":"16"},{"size":607,"mtime":1608536024609,"results":"19","hashOfConfig":"16"},{"size":466,"mtime":1608604472451,"results":"20","hashOfConfig":"16"},{"size":2223,"mtime":1608583315509,"results":"21","hashOfConfig":"16"},{"size":2104,"mtime":1608536633727,"results":"22","hashOfConfig":"16"},{"size":224,"mtime":1608536782868,"results":"23","hashOfConfig":"16"},{"size":797,"mtime":1608568154551,"results":"24","hashOfConfig":"16"},{"size":471,"mtime":1608582412955,"results":"25","hashOfConfig":"16"},{"size":444,"mtime":1608602787629,"results":"26","hashOfConfig":"16"},{"size":1584,"mtime":1608599962859,"results":"27","hashOfConfig":"16"},{"size":388,"mtime":1608604396100,"results":"28","hashOfConfig":"16"},{"size":2272,"mtime":1608604473540,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"18586fd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\index.tsx",[],["64","65"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\reportWebVitals.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\states.ts",["66","67"],"import { atom, selector, selectorFamily } from \"recoil\";\r\n\r\ntype User = {\r\n  username?: string;\r\n};\r\n\r\nexport const userState = selector<User>({\r\n  key: \"userState\",\r\n  get: () => {\r\n    try {\r\n      const value = window.localStorage.getItem(\"user\");\r\n      if (value) return JSON.parse(value);\r\n    } catch (error) {\r\n      window.localStorage.removeItem(\"user\");\r\n      return null;\r\n    }\r\n  },\r\n  set: (_, value) => {\r\n    window.localStorage.setItem(\"user\", JSON.stringify(value));\r\n  },\r\n});\r\n",["68","69"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\firebase.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\index.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotation.ts",["70","71","72","73"],"import { listVal, objectVal } from \"rxfire/database\";\r\n\r\nimport type { AnnotationBase } from \"./annotationTypes\";\r\nimport { Observable } from \"rxjs\";\r\nimport { firebase } from \"./firebase\";\r\n\r\nexport function createAnnotation<T extends AnnotationBase>(\r\n  annotation: T\r\n): Pick<Promise<any>, \"then\" | \"catch\"> {\r\n  if (annotation.datasetId && annotation.datasetItemId) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .push({\r\n        ...annotation,\r\n        createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n      });\r\n  } else {\r\n    throw \"missing id\";\r\n  }\r\n}\r\n\r\nexport function updateAnnotation<T extends AnnotationBase>(annotation: T) {\r\n  if (annotation.id) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .child(annotation.id)\r\n      .update({\r\n        ...annotation,\r\n        updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n      });\r\n  } else {\r\n    throw \"missing id\";\r\n  }\r\n}\r\n\r\nexport function deleteAnnotation<T extends AnnotationBase>(annotation: T) {\r\n  if (annotation.id) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .child(annotation.id)\r\n      .remove();\r\n  } else {\r\n    throw \"missing id\";\r\n  }\r\n}\r\n\r\nexport function getAnnotationById<T extends AnnotationBase>(id: string) {\r\n  return objectVal<T>(firebase.database().ref(\"/annotations\").child(id), \"id\");\r\n}\r\n\r\nexport function findAnnotation<T extends AnnotationBase>(\r\n  datasetId: string,\r\n  datasetItemId: string,\r\n  annotatorId: string\r\n) {\r\n  return objectVal<T>(\r\n    firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .orderByChild(\"datasetItemId\")\r\n      .equalTo(datasetItemId)\r\n      .orderByChild(\"annotatorId\")\r\n      .equalTo(annotatorId)\r\n      .orderByChild(\"datasetId\")\r\n      .equalTo(datasetId),\r\n    \"id\"\r\n  );\r\n}\r\n\r\nexport function listAnnotation<T extends AnnotationBase>(\r\n  datasetId: string,\r\n  datasetItemId: string\r\n) {\r\n  return listVal<T>(\r\n    firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .orderByChild(\"datasetId\")\r\n      .equalTo(datasetId)\r\n      .orderByChild(\"datasetItemId\")\r\n      .equalTo(datasetItemId),\r\n    \"id\"\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useLoadingValue.ts",["74","75","76","77"],"import { useMemo, useReducer } from \"react\";\r\n\r\nexport type LoadingValue<T, E> = {\r\n  error?: E;\r\n  loading: boolean;\r\n  reset: () => void;\r\n  setError: (error: E) => void;\r\n  setValue: (value?: T | null) => void;\r\n  value?: T;\r\n};\r\n\r\ntype ReducerState<E> = {\r\n  error?: E;\r\n  loading: boolean;\r\n  value?: any;\r\n};\r\n\r\ntype ErrorAction<E> = { type: \"error\"; error: E };\r\ntype ResetAction = { type: \"reset\"; defaultValue?: any };\r\ntype ValueAction = { type: \"value\"; value: any };\r\ntype ReducerAction<E> = ErrorAction<E> | ResetAction | ValueAction;\r\n\r\nconst defaultState = (defaultValue?: any) => {\r\n  return {\r\n    loading: defaultValue === undefined || defaultValue === null,\r\n    value: defaultValue,\r\n  };\r\n};\r\n\r\nconst reducer = <E>() => (\r\n  state: ReducerState<E>,\r\n  action: ReducerAction<E>\r\n): ReducerState<E> => {\r\n  switch (action.type) {\r\n    case \"error\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n        value: undefined,\r\n      };\r\n    case \"reset\":\r\n      return defaultState(action.defaultValue);\r\n    case \"value\":\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        loading: false,\r\n        value: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default <T, E>(getDefaultValue?: () => T | null): LoadingValue<T, E> => {\r\n  const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\r\n  const [state, dispatch] = useReducer(\r\n    reducer<E>(),\r\n    defaultState(defaultValue)\r\n  );\r\n\r\n  const reset = () => {\r\n    const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\r\n    dispatch({ type: \"reset\", defaultValue });\r\n  };\r\n\r\n  const setError = (error: E) => {\r\n    dispatch({ type: \"error\", error });\r\n  };\r\n\r\n  const setValue = (value?: T | null) => {\r\n    dispatch({ type: \"value\", value });\r\n  };\r\n\r\n  return useMemo(\r\n    () => ({\r\n      error: state.error,\r\n      loading: state.loading,\r\n      reset,\r\n      setError,\r\n      setValue,\r\n      value: state.value,\r\n    }),\r\n    [state.error, state.loading, reset, setError, setValue, state.value]\r\n  );\r\n};\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\index.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useElementSize.ts",["78"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotationTypes.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\Test.tsx",["79","80"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetDetail.ts",["81","82","83"],"import { listVal, objectVal } from \"rxfire/database\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { firebase } from \"./firebase\";\r\n\r\nexport function createDatasetDetail(\r\n  datasetDetail: DatasetDetail\r\n): Pick<Promise<any>, \"then\" | \"catch\"> {\r\n  return firebase\r\n    .database()\r\n    .ref(\"/datasetDetails\")\r\n    .push({\r\n      ...datasetDetail,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n    });\r\n}\r\n\r\nexport function updateDatasetDetail(datasetDetail: DatasetDetail) {\r\n  if (datasetDetail.id) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/datasetDetails\")\r\n      .child(datasetDetail.id)\r\n      .update({\r\n        ...datasetDetail,\r\n        updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n      });\r\n  } else {\r\n    throw \"missing id\";\r\n  }\r\n}\r\n\r\nexport function deleteDatasetDetail(datasetDetail: DatasetDetail) {\r\n  if (datasetDetail.id) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/datasetDetails\")\r\n      .child(datasetDetail.id)\r\n      .remove();\r\n  } else {\r\n    throw \"missing id\";\r\n  }\r\n}\r\n\r\nexport function getDatasetDetail(id: string) {\r\n  return objectVal<DatasetDetail>(\r\n    firebase.database().ref(\"/datasetDetails\").child(id),\r\n    \"id\"\r\n  );\r\n}\r\n\r\nexport function listDatasetDetail() {\r\n  return listVal<DatasetDetail>(\r\n    firebase.database().ref(\"/datasetDetails\"),\r\n    \"id\"\r\n  );\r\n}\r\n\r\nexport interface DatasetDetail {\r\n  id?: string;\r\n  name?: string;\r\n  description?: string;\r\n  createdAt?: number;\r\n  updatedAt?: number;\r\n  categories?: string[];\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItemTypes.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItem.ts",["84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":1,"column":26,"nodeType":"93","messageId":"94","endLine":1,"endColumn":40},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","replacedBy":"97"},{"ruleId":"91","severity":1,"message":"98","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":20,"column":5,"nodeType":"101","messageId":"102","endLine":20,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":35,"column":5,"nodeType":"101","messageId":"102","endLine":35,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":47,"column":5,"nodeType":"101","messageId":"102","endLine":47,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":56,"column":1,"nodeType":"105","endLine":87,"endColumn":3},{"ruleId":"106","severity":1,"message":"107","line":63,"column":9,"nodeType":"108","endLine":66,"endColumn":4},{"ruleId":"106","severity":1,"message":"109","line":68,"column":9,"nodeType":"108","endLine":70,"endColumn":4},{"ruleId":"106","severity":1,"message":"110","line":72,"column":9,"nodeType":"108","endLine":74,"endColumn":4},{"ruleId":"106","severity":1,"message":"111","line":29,"column":6,"nodeType":"112","endLine":29,"endColumn":13,"suggestions":"113"},{"ruleId":"91","severity":1,"message":"114","line":2,"column":3,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"115","line":3,"column":3,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"98","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":30,"column":5,"nodeType":"101","messageId":"102","endLine":30,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":42,"column":5,"nodeType":"101","messageId":"102","endLine":42,"endColumn":24},{"ruleId":"91","severity":1,"message":"98","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":38,"column":5,"nodeType":"101","messageId":"102","endLine":38,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":54,"column":5,"nodeType":"101","messageId":"102","endLine":54,"endColumn":24},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'atom' is defined but never used.","Identifier","unusedVar","'selectorFamily' is defined but never used.",["116"],["117"],"'Observable' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","The 'reset' function makes the dependencies of useMemo Hook (at line 85) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'reset' in its own useCallback() Hook.","VariableDeclarator","The 'setError' function makes the dependencies of useMemo Hook (at line 85) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'setError' in its own useCallback() Hook.","The 'setValue' function makes the dependencies of useMemo Hook (at line 85) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'setValue' in its own useCallback() Hook.","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'DatasetBase' is defined but never used.","'DatasetDetail' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [elRef, handleResize]",{"range":"121","text":"122"},[747,754],"[elRef, handleResize]"]