[{"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\index.tsx":"1","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\reportWebVitals.ts":"2","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\states.ts":"3","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\firebase.ts":"4","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\index.ts":"5","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotation.ts":"6","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useLoadingValue.ts":"7","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\index.ts":"8","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useElementSize.ts":"9","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotationTypes.ts":"10","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetDetail.ts":"11","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItemTypes.ts":"12","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItem.ts":"13","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\App.tsx":"14","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\index.ts":"15","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\index.tsx":"16","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetList\\index.tsx":"17","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetDetail\\index.tsx":"18","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetList\\List.tsx":"19","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\components\\DatasetDetailForm.tsx":"20","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetList\\ListItem.tsx":"21","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetDetail\\DatasetItems.tsx":"22","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetCreate.tsx":"23","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\index.tsx":"24","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\hooks\\index.ts":"25","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\PropertyBar.js":"26","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Background.tsx":"27","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\FullStage.tsx":"28","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\index.tsx":"29","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Toolbar.tsx":"30","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Editor.tsx":"31","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\datasets.ts":"32","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Box.tsx":"33"},{"size":682,"mtime":1609210607832,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":477,"mtime":1609212128941,"results":"37","hashOfConfig":"35"},{"size":607,"mtime":1608536024609,"results":"38","hashOfConfig":"35"},{"size":495,"mtime":1609154736912,"results":"39","hashOfConfig":"35"},{"size":2807,"mtime":1609359534335,"results":"40","hashOfConfig":"35"},{"size":2104,"mtime":1608536633727,"results":"41","hashOfConfig":"35"},{"size":253,"mtime":1609360912281,"results":"42","hashOfConfig":"35"},{"size":787,"mtime":1609217964529,"results":"43","hashOfConfig":"35"},{"size":552,"mtime":1609368537031,"results":"44","hashOfConfig":"35"},{"size":1540,"mtime":1609216101169,"results":"45","hashOfConfig":"35"},{"size":364,"mtime":1609176475462,"results":"46","hashOfConfig":"35"},{"size":2472,"mtime":1609219619933,"results":"47","hashOfConfig":"35"},{"size":1618,"mtime":1609218944087,"results":"48","hashOfConfig":"35"},{"size":150,"mtime":1609216235178,"results":"49","hashOfConfig":"35"},{"size":772,"mtime":1609215780638,"results":"50","hashOfConfig":"35"},{"size":1195,"mtime":1609360925880,"results":"51","hashOfConfig":"35"},{"size":1401,"mtime":1609360945949,"results":"52","hashOfConfig":"35"},{"size":962,"mtime":1609212430444,"results":"53","hashOfConfig":"35"},{"size":1400,"mtime":1609211748549,"results":"54","hashOfConfig":"35"},{"size":1022,"mtime":1609211453502,"results":"55","hashOfConfig":"35"},{"size":1915,"mtime":1609357348405,"results":"56","hashOfConfig":"35"},{"size":867,"mtime":1609216215671,"results":"57","hashOfConfig":"35"},{"size":4673,"mtime":1609371115710,"results":"58","hashOfConfig":"35"},{"size":1509,"mtime":1609219409530,"results":"59","hashOfConfig":"35"},{"size":198,"mtime":1608508603240,"results":"60","hashOfConfig":"35"},{"size":251,"mtime":1609216768120,"results":"61","hashOfConfig":"35"},{"size":480,"mtime":1609217993200,"results":"62","hashOfConfig":"35"},{"size":261,"mtime":1609360666945,"results":"63","hashOfConfig":"35"},{"size":1900,"mtime":1609217248902,"results":"64","hashOfConfig":"35"},{"size":6163,"mtime":1609370350990,"results":"65","hashOfConfig":"35"},{"size":1745,"mtime":1609361173515,"results":"66","hashOfConfig":"35"},{"size":2298,"mtime":1609362570534,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"18586fd",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\index.tsx",[],["147","148"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\reportWebVitals.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\states.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\firebase.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\index.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotation.ts",["149"],"import { listVal, objectVal } from \"rxfire/database\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\n\r\nimport type { AnnotationBase } from \"./annotationTypes\";\r\nimport { firebase } from \"./firebase\";\r\n\r\nexport function createAnnotation<T extends AnnotationBase>(\r\n  annotation: Omit<T, \"id\" | \"createdAt\" | \"updatedAt\">\r\n): Pick<Promise<any>, \"then\" | \"catch\"> {\r\n  const { datasetId, datasetItemId, ...rest } = annotation;\r\n  return firebase\r\n    .database()\r\n    .ref(\"/annotations\")\r\n    .child(datasetId)\r\n    .child(datasetItemId)\r\n    .push({\r\n      ...rest,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n    });\r\n}\r\n\r\nexport function updateAnnotation<T extends AnnotationBase>(\r\n  annotation: Partial<Omit<T, \"id\" | \"datasetId\" | \"datasetItemId\">> &\r\n    Pick<T, \"id\" | \"datasetId\" | \"datasetItemId\">\r\n) {\r\n  const {\r\n    datasetId,\r\n    datasetItemId,\r\n    id,\r\n    createdAt,\r\n    updatedAt,\r\n    ...rest\r\n  } = annotation;\r\n  return firebase\r\n    .database()\r\n    .ref(\"/annotations\")\r\n    .child(datasetId)\r\n    .child(datasetItemId)\r\n    .child(id)\r\n    .update({\r\n      ...rest,\r\n      updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n    });\r\n}\r\n\r\nexport function deleteAnnotation<T extends AnnotationBase>(\r\n  annotation: Pick<T, \"id\" | \"datasetId\" | \"datasetItemId\">\r\n) {\r\n  return firebase\r\n    .database()\r\n    .ref(\"/annotations\")\r\n    .child(annotation.datasetId)\r\n    .child(annotation.datasetItemId)\r\n    .child(annotation.id)\r\n    .remove();\r\n}\r\n\r\nexport function getAnnotation<T extends AnnotationBase>(\r\n  datasetId: string,\r\n  datasetItemId: string,\r\n  annotationId: string\r\n) {\r\n  return objectVal<T>(\r\n    firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .child(datasetId)\r\n      .child(datasetItemId)\r\n      .child(annotationId),\r\n    \"id\"\r\n  ).pipe(map((value) => ({ ...value, datasetId, datasetItemId } as T)));\r\n}\r\n\r\nexport function findAnnotationsByAnnotator<T extends AnnotationBase>(\r\n  datasetId: string,\r\n  datasetItemId: string,\r\n  annotator: string\r\n) {\r\n  return listVal<T>(\r\n    firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .child(datasetId)\r\n      .child(datasetItemId)\r\n      .orderByChild(\"annotator\")\r\n      .equalTo(annotator),\r\n    \"id\"\r\n  ).pipe(\r\n    map((values) =>\r\n      values.map((value) => ({ ...value, datasetId, datasetItemId } as T))\r\n    )\r\n  );\r\n}\r\n\r\nexport function listAnnotation<T extends AnnotationBase>(\r\n  datasetId: string,\r\n  datasetItemId: string\r\n) {\r\n  return listVal<T>(\r\n    firebase\r\n      .database()\r\n      .ref(\"/annotations\")\r\n      .child(datasetId)\r\n      .child(datasetItemId),\r\n    \"id\"\r\n  ).pipe(\r\n    map((values) =>\r\n      values.map((value) => ({ ...value, datasetId, datasetItemId } as T))\r\n    )\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useLoadingValue.ts",["150","151","152","153"],"import { useMemo, useReducer } from \"react\";\r\n\r\nexport type LoadingValue<T, E> = {\r\n  error?: E;\r\n  loading: boolean;\r\n  reset: () => void;\r\n  setError: (error: E) => void;\r\n  setValue: (value?: T | null) => void;\r\n  value?: T;\r\n};\r\n\r\ntype ReducerState<E> = {\r\n  error?: E;\r\n  loading: boolean;\r\n  value?: any;\r\n};\r\n\r\ntype ErrorAction<E> = { type: \"error\"; error: E };\r\ntype ResetAction = { type: \"reset\"; defaultValue?: any };\r\ntype ValueAction = { type: \"value\"; value: any };\r\ntype ReducerAction<E> = ErrorAction<E> | ResetAction | ValueAction;\r\n\r\nconst defaultState = (defaultValue?: any) => {\r\n  return {\r\n    loading: defaultValue === undefined || defaultValue === null,\r\n    value: defaultValue,\r\n  };\r\n};\r\n\r\nconst reducer = <E>() => (\r\n  state: ReducerState<E>,\r\n  action: ReducerAction<E>\r\n): ReducerState<E> => {\r\n  switch (action.type) {\r\n    case \"error\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n        value: undefined,\r\n      };\r\n    case \"reset\":\r\n      return defaultState(action.defaultValue);\r\n    case \"value\":\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        loading: false,\r\n        value: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default <T, E>(getDefaultValue?: () => T | null): LoadingValue<T, E> => {\r\n  const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\r\n  const [state, dispatch] = useReducer(\r\n    reducer<E>(),\r\n    defaultState(defaultValue)\r\n  );\r\n\r\n  const reset = () => {\r\n    const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\r\n    dispatch({ type: \"reset\", defaultValue });\r\n  };\r\n\r\n  const setError = (error: E) => {\r\n    dispatch({ type: \"error\", error });\r\n  };\r\n\r\n  const setValue = (value?: T | null) => {\r\n    dispatch({ type: \"value\", value });\r\n  };\r\n\r\n  return useMemo(\r\n    () => ({\r\n      error: state.error,\r\n      loading: state.loading,\r\n      reset,\r\n      setError,\r\n      setValue,\r\n      value: state.value,\r\n    }),\r\n    [state.error, state.loading, reset, setError, setValue, state.value]\r\n  );\r\n};\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\index.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\useElementSize.ts",["154"],"import { RefObject, useCallback, useEffect, useState } from \"react\";\r\n\r\n/**\r\n * element의 사이즈를 구하는 훅\r\n */\r\nexport default function useElementSize(\r\n  elRef: RefObject<HTMLElement | undefined>\r\n) {\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n\r\n  const handleResize = useCallback(() => {\r\n    if (!elRef) return;\r\n    if (!elRef.current) return;\r\n    setSize({\r\n      width: elRef.current.clientWidth,\r\n      height: elRef.current.clientHeight,\r\n    });\r\n  }, [elRef]);\r\n\r\n  useEffect(() => {\r\n    if (!(elRef && elRef.current)) {\r\n      return;\r\n    }\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [elRef]);\r\n\r\n  return size;\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\annotationTypes.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetDetail.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItemTypes.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\services\\datasetItem.ts",["155"],"import { list, listVal, objectVal } from \"rxfire/database\";\r\n\r\nimport type { DatasetItemBase } from \"./datasetItemTypes\";\r\nimport { firebase } from \"./firebase\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport function createDataset<T extends DatasetItemBase>(\r\n  datasetId: string,\r\n  datasetItems: Omit<T, \"id\" | \"datasetId\" | \"createdAt\" | \"updatedAt\">[]\r\n): Pick<Promise<any>, \"then\" | \"catch\"> {\r\n  const ref = firebase.database().ref(\"/datasets\").child(datasetId);\r\n  const dataset: any = {};\r\n\r\n  datasetItems.forEach((item) => {\r\n    const id = ref.push().key;\r\n    if (!id) throw new Error(\"key generation error\");\r\n    const datasetItem: any = {\r\n      ...item,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n    };\r\n    delete datasetItem.id;\r\n    dataset[id] = datasetItem;\r\n  });\r\n\r\n  return ref.set(dataset);\r\n}\r\n\r\nexport function createDatasetItem<T extends DatasetItemBase>(\r\n  datasetId: string,\r\n  datasetItem: Omit<T, \"id\" | \"datasetId\" | \"createdAt\" | \"updatedAt\">\r\n): Pick<Promise<any>, \"then\" | \"catch\"> {\r\n  return firebase\r\n    .database()\r\n    .ref(\"/datasets\")\r\n    .child(datasetId)\r\n    .push({\r\n      ...datasetItem,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n    });\r\n}\r\n\r\nexport function updateDatasetItem<T extends DatasetItemBase>(\r\n  datasetItem: T\r\n): Pick<Promise<any>, \"then\" | \"catch\"> {\r\n  const { datasetId, id, createdAt, ...rest } = datasetItem;\r\n  return firebase\r\n    .database()\r\n    .ref(\"/datasets\")\r\n    .child(datasetId)\r\n    .child(id)\r\n    .update({\r\n      ...rest,\r\n      updatedAt: firebase.database.ServerValue.TIMESTAMP,\r\n    });\r\n}\r\n\r\nexport function deleteDatasetItem<T extends DatasetItemBase>(datasetItem: T) {\r\n  return firebase\r\n    .database()\r\n    .ref(\"/datasets\")\r\n    .child(datasetItem.datasetId)\r\n    .child(datasetItem.id)\r\n    .remove();\r\n}\r\n\r\nexport function getAllDatasetItemIds(datasetId: string) {\r\n  return list(firebase.database().ref(\"/datasets\").child(datasetId)).pipe(\r\n    map((values) => values.map((value) => value.snapshot.key as string))\r\n  );\r\n}\r\n\r\nexport function getDatasetItem<T extends DatasetItemBase>(\r\n  datasetId: string,\r\n  datasetItemId: string\r\n) {\r\n  return objectVal<T>(\r\n    firebase.database().ref(\"/datasets\").child(datasetId).child(datasetItemId),\r\n    \"id\"\r\n  ).pipe(map((value) => ({ ...value, datasetId } as T)));\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\App.tsx",["156"],"import * as pages from \"./pages\";\n\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { Link, Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\n\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"./states\";\n\n// 앱 전반적 환경 설정\n// 게임에서 main.cpp와 동일? => service와 manager생성\nexport default function App() {\n  const user = useRecoilValue(userState);\n  // if (!user) {\n  // return <pages.Login />;\n  // }\n\n  return (\n    <Router>\n      <div\n        style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}\n      >\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Container>\n            <Navbar.Brand as={Link} to=\"/\">\n              {user.username}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav>\n                <Nav.Link as={Link} to=\"/datasets\">\n                  데이터셋 관리\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/accounts\">\n                  계정 관리\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <div style={{ flex: 1, display: \"flex\" }}>\n          <Switch>\n            <Route path=\"/datasets\" component={pages.Dataset} />\n            <Route\n              path=\"/workspace/:datasetId/:datasetItemId?\"\n              component={pages.Workspace}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\index.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\index.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetList\\index.tsx",["157","158","159"],"import { Breadcrumb, Button } from \"react-bootstrap\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport List from \"./List\";\r\nimport { useDatasetDetailList } from \"../../../common/hooks\";\r\n\r\nexport default function DatasetList() {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const [datasetDetails] = useDatasetDetailList();\r\n\r\n  const handleCreate = useCallback(() => {\r\n    history.push(`${match.url}/create`);\r\n  }, []);\r\n\r\n  const handleEdit = useCallback((item) => {\r\n    history.push(`${match.url}/${item.id}`);\r\n  }, []);\r\n\r\n  const handleSelect = useCallback((item) => {\r\n    history.push(`workspace/${item.id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>데이터셋 관리</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>데이터셋 목록</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Button variant=\"primary\" onClick={handleCreate}>\r\n        New\r\n      </Button>\r\n      <List\r\n        items={datasetDetails}\r\n        onEdit={handleEdit}\r\n        onSelect={handleSelect}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetDetail\\index.tsx",["160"],"import React, { useCallback } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport DatasetDetailForm from \"../components/DatasetDetailForm\";\r\nimport DatasetItems from \"./DatasetItems\";\r\nimport { MatchParams } from \"../\";\r\nimport { useDatasetDetail } from \"../../../common/hooks\";\r\n\r\nexport default function DatasetDetail() {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<MatchParams>();\r\n  const [datasetDetail, loading, error, updateDatasetDetail] = useDatasetDetail(\r\n    match.params.id\r\n  );\r\n\r\n  const handleSubmit = useCallback(async (data) => {\r\n    data.categories = data.categories.split(\",\");\r\n    await updateDatasetDetail(data);\r\n    history.goBack();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!datasetDetail) {\r\n    return <div>empty object</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/datasets\">데이터셋 관리</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>데이터셋 상세</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <DatasetDetailForm\r\n        onSubmit={handleSubmit}\r\n        defaultValues={datasetDetail}\r\n      />\r\n      <DatasetItems datasetId={match.params.id} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetList\\List.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\components\\DatasetDetailForm.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetList\\ListItem.tsx",["161"],"import Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport type { DatasetDetail } from \"../../../services\";\r\nimport Moment from \"react-moment\";\r\nimport React from \"react\";\r\n\r\nexport interface ListItemProps {\r\n  item: DatasetDetail;\r\n  onEdit: (item: DatasetDetail) => void;\r\n  onSelect: (item: DatasetDetail) => void;\r\n}\r\n\r\nexport function ListItem({ item, onEdit, onSelect }: ListItemProps) {\r\n  return (\r\n    <tr key={item.id}>\r\n      <td>{item.name}</td>\r\n      <td>{item.description}</td>\r\n      <td scope=\"row\">\r\n        <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n      </td>\r\n      <td scope=\"row\">\r\n        <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n      </td>\r\n      <td>\r\n        <ButtonGroup size=\"sm\">\r\n          <Button variant=\"primary\" onClick={() => onEdit(item)}>\r\n            Detail\r\n          </Button>\r\n          <Button onClick={() => onSelect(item)}>Annotate</Button>\r\n        </ButtonGroup>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetDetail\\DatasetItems.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Dataset\\DatasetCreate.tsx",["162"],"import React, { useCallback } from \"react\";\r\n\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport DatasetDetailForm from \"./components/DatasetDetailForm\";\r\nimport { createDatasetDetail } from \"../../services\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function DatasetCreate() {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(async (data) => {\r\n    data.categories = data.categories.split(\",\");\r\n    createDatasetDetail(data);\r\n    history.goBack();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/datasets\">데이터셋 관리</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>데이터셋 생성</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <DatasetDetailForm defaultValues={{}} onSubmit={handleSubmit} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\index.tsx",["163","164","165","166","167","168","169","170"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\hooks\\index.ts",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\PropertyBar.js",[],["171","172"],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Background.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\FullStage.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\index.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Toolbar.tsx",[],"C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Editor.tsx",["173","174","175"],"import { Background, PropertyBar, Toolbar } from \".\";\r\nimport Box, { Rectangle } from \"./Box\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Image, Layer, Stage } from \"react-konva\";\r\nimport React, { useCallback, useRef, useState } from \"react\";\r\n\r\nimport type { BoundingBox } from \"../../../services\";\r\nimport cc from \"color-convert\";\r\nimport produce from \"immer\";\r\nimport { useElementSize } from \"../../../common/hooks\";\r\n\r\ninterface EditorProps {\r\n  backgoundImage: string;\r\n  boundingBoxes: BoundingBox[];\r\n  categories: string[];\r\n  onBoundingBoxesChange?: (boundingBoxes: BoundingBox[]) => void;\r\n  onBoundingBoxesSelected?: (boundingBox: BoundingBox) => void;\r\n}\r\n\r\nexport default function Editor({\r\n  backgoundImage,\r\n  boundingBoxes,\r\n  categories,\r\n  onBoundingBoxesChange,\r\n  onBoundingBoxesSelected,\r\n}: EditorProps) {\r\n  const rootRef = useRef<HTMLDivElement>(null);\r\n  const size = useElementSize(rootRef);\r\n  const [rectangle, setRectangle] = useState<Rectangle | null>(null);\r\n  const [selectedId, setSelectedId] = useState<number | null>(null);\r\n\r\n  const handleMouseDown = useCallback((e) => {\r\n    if (e.target.className !== \"Image\") return;\r\n    const [x, y] = [Math.round(e.evt.offsetX), Math.round(e.evt.offsetY)];\r\n    setRectangle({\r\n      x,\r\n      y,\r\n      width: 0,\r\n      height: 0,\r\n    });\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback(\r\n    (e) => {\r\n      if (!rectangle) return;\r\n      const [x, y] = [Math.round(e.evt.offsetX), Math.round(e.evt.offsetY)];\r\n      setRectangle({\r\n        ...rectangle,\r\n        width: x - rectangle.x,\r\n        height: y - rectangle.y,\r\n      });\r\n    },\r\n    [rectangle]\r\n  );\r\n\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      if (!rectangle) return;\r\n      if (rectangle.width <= 1 || rectangle.height <= 1) {\r\n        setRectangle(null);\r\n        return;\r\n      }\r\n      onBoundingBoxesChange?.(\r\n        produce(boundingBoxes, (draft) => {\r\n          draft.push({ ...rectangle, category: categories[0] });\r\n        })\r\n      );\r\n      setRectangle(null);\r\n      //   setRectangles(\r\n      //     produce(boundingBoxes, (draft) => {\r\n      //       draft.push(rectangle);\r\n      //       setRectangle(null);\r\n      //     })\r\n      //   );\r\n      //   setSelectedId(boundingBoxes.length);\r\n    },\r\n    [rectangle]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (i, rectangle) => {\r\n      onBoundingBoxesChange?.(\r\n        produce(boundingBoxes, (draft) => {\r\n          draft[i] = { ...draft[i], ...rectangle };\r\n        })\r\n      );\r\n    },\r\n    [boundingBoxes]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"#171719\",\r\n      }}\r\n    >\r\n      <Toolbar onSelect={(text) => {}} />\r\n      <div style={{ flex: 1 }} ref={rootRef}>\r\n        <Stage width={size.width} height={size.height}>\r\n          <Layer\r\n            onMouseDown={handleMouseDown}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}\r\n          >\r\n            <Background url={backgoundImage} />\r\n            {boundingBoxes.map((rectangle, i) => {\r\n              return (\r\n                <Box\r\n                  key={i}\r\n                  rectangle={rectangle}\r\n                  color={cc.hsv.hex([0, 0, 100])}\r\n                  selected={i === selectedId}\r\n                  onSelect={() => {\r\n                    setSelectedId(i);\r\n                    onBoundingBoxesSelected?.(boundingBoxes[i]);\r\n                  }}\r\n                  onChange={(shape) => {\r\n                    handleChange(i, shape);\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n            {rectangle && (\r\n              <Box\r\n                rectangle={rectangle}\r\n                color={cc.hsv.hex([0, 0, 100])}\r\n                selected={false}\r\n              />\r\n            )}\r\n          </Layer>\r\n        </Stage>\r\n      </div>\r\n\r\n      <PropertyBar>\r\n        {selectedId !== null && (\r\n          <Container style={{ color: \"white\" }}>\r\n            <p>x: {boundingBoxes[selectedId].x}</p>\r\n            <p>y: {boundingBoxes[selectedId].y}</p>\r\n            <p>width: {boundingBoxes[selectedId].width}</p>\r\n            <p>height: {boundingBoxes[selectedId].height}</p>\r\n            <p>\r\n              <select\r\n                value={boundingBoxes[selectedId].category || \"\"}\r\n                onChange={({ target }) => {\r\n                  onBoundingBoxesChange?.(\r\n                    produce(boundingBoxes, (draft) => {\r\n                      draft[selectedId].category = target.value;\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                {categories.map((x) => (\r\n                  <option value={x}>{x}</option>\r\n                ))}\r\n              </select>\r\n            </p>\r\n            <p>\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  onBoundingBoxesChange?.(\r\n                    produce(boundingBoxes, (draft) => {\r\n                      const id = selectedId;\r\n                      setSelectedId(null);\r\n                      draft.splice(id, 1);\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                Delete bbox\r\n              </Button>\r\n            </p>\r\n            {/* <p>\r\n              <Button\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/workspace/${params.datasetId}/${\r\n                      Number(params.datasetItemId) - 1\r\n                    }`\r\n                  )\r\n                }\r\n              >\r\n                Prev item\r\n              </Button>\r\n            </p>\r\n            <p>\r\n              <Button\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/workspace/${params.datasetId}/${\r\n                      Number(params.datasetItemId) + 1\r\n                    }`\r\n                  )\r\n                }\r\n              >\r\n                Next item\r\n              </Button>\r\n            </p> */}\r\n          </Container>\r\n        )}\r\n      </PropertyBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\common\\hooks\\datasets.ts",["176","177"],"import {\r\n  DatasetDetail,\r\n  deleteDatasetDetail,\r\n  getDatasetDetail,\r\n  getDatasetItem,\r\n  listDatasetDetail,\r\n  updateDatasetDetail,\r\n} from \"../../services\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport type { DatasetItemBase } from \"../../services\";\r\nimport { useLoadingValue } from \".\";\r\n\r\nexport function useDatasetDetailList() {\r\n  const { error, loading, setError, setValue, value } = useLoadingValue<\r\n    DatasetDetail[],\r\n    any\r\n  >();\r\n\r\n  useEffect(() => {\r\n    listDatasetDetail().subscribe(setValue, setError);\r\n  }, []);\r\n\r\n  return [value, loading, error] as const;\r\n}\r\n\r\nexport function useDatasetDetail(id: string) {\r\n  const { error, loading, setError, setValue, value } = useLoadingValue<\r\n    DatasetDetail,\r\n    any\r\n  >();\r\n\r\n  useEffect(() => {\r\n    getDatasetDetail(id).subscribe(setValue, setError);\r\n  }, [id]);\r\n\r\n  const _update = useCallback(\r\n    async (datasetDetail: DatasetDetail) => {\r\n      await updateDatasetDetail({ ...datasetDetail, id });\r\n    },\r\n    [id]\r\n  );\r\n  const _delete = useCallback(\r\n    async (datasetDetail: DatasetDetail) => {\r\n      await deleteDatasetDetail({ ...datasetDetail, id });\r\n    },\r\n    [id]\r\n  );\r\n  return [value, loading, error, _update, _delete] as const;\r\n}\r\n\r\nexport function useDatasetItem<T extends DatasetItemBase>(\r\n  datasetId: string,\r\n  datasetItemId: string\r\n) {\r\n  const [datasetItem, setDatasetItem] = useState<T>();\r\n\r\n  useEffect(() => {\r\n    getDatasetItem<T>(datasetId, datasetItemId).subscribe(setDatasetItem);\r\n  }, [datasetId, datasetItemId]);\r\n\r\n  return datasetItem;\r\n}\r\n\r\nexport function useDatasetItemList() {}\r\n\r\n// export function useDatasetCreate(dataset: DatasetDetail) {\r\n//   return createDataset(dataset);\r\n// }\r\n","C:\\Users\\jeong\\Desktop\\annotation-tool\\src\\pages\\Workspace\\components\\Box.tsx",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":15,"nodeType":"184","messageId":"185","endLine":2,"endColumn":24},{"ruleId":"186","severity":1,"message":"187","line":56,"column":1,"nodeType":"188","endLine":87,"endColumn":3},{"ruleId":"189","severity":1,"message":"190","line":63,"column":9,"nodeType":"191","endLine":66,"endColumn":4},{"ruleId":"189","severity":1,"message":"192","line":68,"column":9,"nodeType":"191","endLine":70,"endColumn":4},{"ruleId":"189","severity":1,"message":"193","line":72,"column":9,"nodeType":"191","endLine":74,"endColumn":4},{"ruleId":"189","severity":1,"message":"194","line":29,"column":6,"nodeType":"195","endLine":29,"endColumn":13,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"197","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":23},{"ruleId":"182","severity":1,"message":"198","line":5,"column":17,"nodeType":"184","messageId":"185","endLine":5,"endColumn":26},{"ruleId":"189","severity":1,"message":"199","line":15,"column":6,"nodeType":"195","endLine":15,"endColumn":8,"suggestions":"200"},{"ruleId":"189","severity":1,"message":"199","line":19,"column":6,"nodeType":"195","endLine":19,"endColumn":8,"suggestions":"201"},{"ruleId":"189","severity":1,"message":"202","line":23,"column":6,"nodeType":"195","endLine":23,"endColumn":8,"suggestions":"203"},{"ruleId":"189","severity":1,"message":"204","line":21,"column":6,"nodeType":"195","endLine":21,"endColumn":8,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":18,"column":11,"nodeType":"208","endLine":18,"endColumn":22},{"ruleId":"189","severity":1,"message":"202","line":15,"column":6,"nodeType":"195","endLine":15,"endColumn":8,"suggestions":"209"},{"ruleId":"182","severity":1,"message":"210","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":16},{"ruleId":"182","severity":1,"message":"211","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":16},{"ruleId":"182","severity":1,"message":"212","line":9,"column":3,"nodeType":"184","messageId":"185","endLine":9,"endColumn":19},{"ruleId":"182","severity":1,"message":"213","line":14,"column":18,"nodeType":"184","messageId":"185","endLine":14,"endColumn":27},{"ruleId":"182","severity":1,"message":"214","line":16,"column":33,"nodeType":"184","messageId":"185","endLine":16,"endColumn":46},{"ruleId":"182","severity":1,"message":"215","line":19,"column":10,"nodeType":"184","messageId":"185","endLine":19,"endColumn":18},{"ruleId":"182","severity":1,"message":"216","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":15},{"ruleId":"182","severity":1,"message":"217","line":36,"column":10,"nodeType":"184","messageId":"185","endLine":36,"endColumn":20},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"218","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":15},{"ruleId":"189","severity":1,"message":"219","line":77,"column":5,"nodeType":"195","endLine":77,"endColumn":16,"suggestions":"220"},{"ruleId":"189","severity":1,"message":"221","line":88,"column":5,"nodeType":"195","endLine":88,"endColumn":20,"suggestions":"222"},{"ruleId":"189","severity":1,"message":"223","line":22,"column":6,"nodeType":"195","endLine":22,"endColumn":8,"suggestions":"224"},{"ruleId":"189","severity":1,"message":"223","line":35,"column":6,"nodeType":"195","endLine":35,"endColumn":10,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"@typescript-eslint/no-unused-vars","'switchMap' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","The 'reset' function makes the dependencies of useMemo Hook (at line 85) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'reset' in its own useCallback() Hook.","VariableDeclarator","The 'setError' function makes the dependencies of useMemo Hook (at line 85) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'setError' in its own useCallback() Hook.","The 'setValue' function makes the dependencies of useMemo Hook (at line 85) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'setValue' in its own useCallback() Hook.","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.","ArrayExpression",["228"],"'listVal' is defined but never used.","'useEffect' is defined but never used.","React Hook useCallback has missing dependencies: 'history' and 'match.url'. Either include them or remove the dependency array.",["229"],["230"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["231"],"React Hook useCallback has missing dependencies: 'history' and 'updateDatasetDetail'. Either include them or remove the dependency array.",["232"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute",["233"],"'DatasetDetail' is defined but never used.","'getAnnotation' is defined but never used.","'getDatasetDetail' is defined but never used.","'Container' is defined but never used.","'useRouteMatch' is defined but never used.","'firebase' is defined but never used.","'produce' is defined but never used.","'categories' is assigned a value but never used.","'Image' is defined but never used.","React Hook useCallback has missing dependencies: 'boundingBoxes', 'categories', and 'onBoundingBoxesChange'. Either include them or remove the dependency array. If 'onBoundingBoxesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["234"],"React Hook useCallback has a missing dependency: 'onBoundingBoxesChange'. Either include it or remove the dependency array. If 'onBoundingBoxesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],"React Hook useEffect has missing dependencies: 'setError' and 'setValue'. Either include them or remove the dependency array.",["236"],["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"240","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"243","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [elRef, handleResize]",{"range":"256","text":"257"},"Update the dependencies array to be: [history, match.url]",{"range":"258","text":"259"},{"range":"260","text":"259"},"Update the dependencies array to be: [history]",{"range":"261","text":"262"},"Update the dependencies array to be: [history, updateDatasetDetail]",{"range":"263","text":"264"},{"range":"265","text":"262"},"Update the dependencies array to be: [boundingBoxes, categories, onBoundingBoxesChange, rectangle]",{"range":"266","text":"267"},"Update the dependencies array to be: [boundingBoxes, onBoundingBoxesChange]",{"range":"268","text":"269"},"Update the dependencies array to be: [setError, setValue]",{"range":"270","text":"271"},"Update the dependencies array to be: [id, setError, setValue]",{"range":"272","text":"273"},[737,744],"[elRef, handleResize]",[511,513],"[history, match.url]",[616,618],[720,722],"[history]",[769,771],"[history, updateDatasetDetail]",[507,509],[2307,2318],"[boundingBoxes, categories, onBoundingBoxesChange, rectangle]",[2554,2569],"[boundingBoxes, onBoundingBoxesChange]",[560,562],"[setError, setValue]",[861,865],"[id, setError, setValue]"]